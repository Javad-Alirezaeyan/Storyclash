version: '3'
services:

   #PHP Service
   app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  
  #Nginx Service
   webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      # I'm using port 8000 to access docker to avoid conflict with port 80
      # in my local environment
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #MySQL Service
   db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
  
   phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        volumes:
          - /sessions
        ports:
          - 8180:80
        environment:
          - PMA_ARBITRARY=1
        depends_on:
          - db
              
#Docker Networks
networks:
  app-network:
    driver: bridge

 
  
